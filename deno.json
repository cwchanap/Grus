{
  "lock": false,
  "tasks": {
    "check": "deno fmt --check && deno lint && deno check **/*.ts && deno check **/*.tsx",
    "cli": "echo \"import '\\$fresh/src/dev/cli.ts'\" | deno run --unstable -A -",
    "manifest": "deno task cli manifest $(pwd)",
    "start": "deno run -A --unstable-kv --watch=static/,routes/ dev.ts",
    "build": "deno run -A --unstable-kv dev.ts build",
    "preview": "deno run -A --unstable-kv main.ts",
    "update": "deno run -A -r https://fresh.deno.dev/update .",
    "test": "deno test --allow-all --unstable-kv",
    "test:watch": "deno test --allow-all --unstable-kv --watch",
    "test:coverage": "deno test --allow-all --unstable-kv --coverage=coverage && deno coverage coverage --lcov --output=coverage.lcov",
    "deploy": "bash scripts/deploy-deno.sh",
    "health-check": "curl http://localhost:8000/api/health",
    "lint": "deno lint",
    "lint:fix": "deno lint --fix",
    "format": "deno fmt",
    "format:check": "deno fmt --check",
    "type-check": "deno check **/*.ts **/*.tsx",
    "pre-commit": "deno fmt",
    "lint-staged": "deno run --allow-run --allow-read scripts/lint-staged.ts",
    "ci": "deno task format:check && deno task lint && deno task type-check && deno task test",
    "setup-hooks": "deno run --allow-read --allow-write scripts/setup-hooks.ts"
  },
  "lint": {
    "rules": {
      "tags": [
        "fresh",
        "recommended"
      ],
      "include": [
        "no-unused-vars",
        "no-implicit-any",
        "prefer-const",
        "no-inferrable-types"
      ],
      "exclude": [
        "no-explicit-any"
      ]
    },
    "include": [
      "components/",
      "islands/",
      "lib/",
      "routes/",
      "types/",
      "*.ts",
      "*.tsx"
    ],
    "exclude": [
      "**/_fresh/*",
      "**/node_modules/*",
      "**/.git/*",
      "**/coverage/*",
      "fresh.gen.ts"
    ]
  },
  "fmt": {
    "include": [
      "components/",
      "islands/",
      "lib/",
      "routes/",
      "types/",
      "*.ts",
      "*.tsx",
      "*.js",
      "*.jsx",
      "*.json",
      "*.jsonc",
      "*.md"
    ],
    "exclude": [
      "**/_fresh/*",
      "**/node_modules/*",
      "**/.git/*",
      "**/coverage/*",
      "fresh.gen.ts"
    ],
    "options": {
      "lineWidth": 100,
      "indentWidth": 2,
      "semiColons": true,
      "singleQuote": false,
      "proseWrap": "preserve"
    }
  },
  "exclude": [
    "**/_fresh/*"
  ],
  "imports": {
    "$fresh/": "https://deno.land/x/fresh@1.7.3/",
    "preact": "https://esm.sh/preact@10.22.0",
    "preact/": "https://esm.sh/preact@10.22.0/",
    "@preact/signals": "https://esm.sh/*@preact/signals@1.2.2",
    "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.5.1",
    "tailwindcss": "npm:tailwindcss@3.4.1",
    "tailwindcss/": "npm:/tailwindcss@3.4.1/",
    "tailwindcss/plugin": "npm:/tailwindcss@3.4.1/plugin.js",
    "$std/": "https://deno.land/std@0.216.0/",
    "pixi.js": "https://esm.sh/pixi.js@8.0.0"
  },
  "compilerOptions": {
    "jsx": "react-jsx",
    "jsxImportSource": "preact",
    "lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns", "deno.unstable", "webworker"],
    "strict": true
  },
  "nodeModulesDir": "auto"
}
